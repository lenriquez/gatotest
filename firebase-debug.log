[debug] [2020-10-19T01:42:39.402Z] ----------------------------------------------------------------------
[debug] [2020-10-19T01:42:39.403Z] Command:       /usr/local/bin/firebase /Users/luisenriquez/.cache/firebase/tools/lib/node_modules/firebase-tools/lib/bin/firebase init
[debug] [2020-10-19T01:42:39.403Z] CLI Version:   8.12.1
[debug] [2020-10-19T01:42:39.404Z] Platform:      darwin
[debug] [2020-10-19T01:42:39.404Z] Node Version:  v12.18.1
[debug] [2020-10-19T01:42:39.416Z] Time:          Sun Oct 18 2020 20:42:39 GMT-0500 (Colombia Standard Time)
[debug] [2020-10-19T01:42:39.416Z] ----------------------------------------------------------------------
[debug] [2020-10-19T01:42:39.416Z] 
[debug] [2020-10-19T01:42:39.426Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2020-10-19T01:42:39.427Z] > authorizing via signed-in user
[info] 
     ######## #### ########  ######## ########     ###     ######  ########
     ##        ##  ##     ## ##       ##     ##  ##   ##  ##       ##
     ######    ##  ########  ######   ########  #########  ######  ######
     ##        ##  ##    ##  ##       ##     ## ##     ##       ## ##
     ##       #### ##     ## ######## ########  ##     ##  ######  ########

You're about to initialize a Firebase project in this directory:

  /Users/luisenriquez/Personal/gatoTest

[info] 
=== Project Setup
[info] 
[info] First, let's associate this project directory with a Firebase project.
[info] You can create multiple project aliases by running firebase use --add, 
[info] but for now we'll just set up a default project.
[info] 
[debug] [2020-10-19T01:42:47.048Z] >>> HTTP REQUEST GET https://firebase.googleapis.com/v1beta1/projects?pageSize=100  
 
[debug] [2020-10-19T01:42:47.650Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 19 Oct 2020 01:42:47 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-27=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] i  Using project testgato (testgato) 
[info] 
=== Database Setup
[info] 
[info] Firebase Realtime Database Rules allow you to define how your data should be
[info] structured and when your data can be read from and written to.
[info] 
[debug] [2020-10-19T01:43:00.755Z] >>> HTTP REQUEST GET https://testgato.firebaseio.com/.settings/rules.json  
 
[debug] [2020-10-19T01:43:01.521Z] <<< HTTP RESPONSE 200 {"server":"nginx","date":"Mon, 19 Oct 2020 01:43:01 GMT","content-type":"application/json; charset=utf-8","content-length":"161","connection":"keep-alive","access-control-allow-origin":"*","cache-control":"no-cache","strict-transport-security":"max-age=31556926; includeSubDomains; preload"}
[info] âœ”  Database Rules for testgato have been downloaded to database.rules.json. 
[info] Future modifications to database.rules.json will update Database Rules when you run
[info] firebase deploy.
[info] 
=== Firestore Setup
[debug] [2020-10-19T01:43:01.525Z] >>> HTTP REQUEST GET https://serviceusage.googleapis.com/v1/projects/testgato/services/firestore.googleapis.com  
 
[debug] [2020-10-19T01:43:02.665Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 19 Oct 2020 01:43:02 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-27=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2020-10-19T01:43:02.667Z] >>> HTTP REQUEST GET https://appengine.googleapis.com/v1/apps/testgato  
 
[debug] [2020-10-19T01:43:06.485Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 19 Oct 2020 01:43:06 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-27=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2020-10-19T01:43:06.485Z] database_type: CLOUD_FIRESTORE
[debug] [2020-10-19T01:43:06.486Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2020-10-19T01:43:06.486Z] > authorizing via signed-in user
[debug] [2020-10-19T01:43:06.486Z] [iam] checking project testgato for permissions ["firebase.projects.get"]
[debug] [2020-10-19T01:43:06.487Z] >>> HTTP REQUEST POST https://cloudresourcemanager.googleapis.com/v1/projects/testgato:testIamPermissions  
 {"permissions":["firebase.projects.get"]}
[debug] [2020-10-19T01:43:07.097Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 19 Oct 2020 01:43:06 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","server-timing":"gfet4t7; dur=320","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-27=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] 
[info] Firestore Security Rules allow you to define how and when to allow
[info] requests. You can keep these rules in your project directory
[info] and publish them with firebase deploy.
[info] 
[debug] [2020-10-19T01:43:14.722Z] >>> HTTP REQUEST GET https://firebaserules.googleapis.com/v1/projects/testgato/releases?pageSize=10&pageToken=  
 
[debug] [2020-10-19T01:43:15.253Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 19 Oct 2020 01:43:15 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-27=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2020-10-19T01:43:15.254Z] Found ruleset: projects/testgato/rulesets/99d80ccf-e27f-4181-83d1-dc6be58444a3
[debug] [2020-10-19T01:43:15.254Z] >>> HTTP REQUEST GET https://firebaserules.googleapis.com/v1/projects/testgato/rulesets/99d80ccf-e27f-4181-83d1-dc6be58444a3  
 
[debug] [2020-10-19T01:43:15.699Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 19 Oct 2020 01:43:15 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-27=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2020-10-19T01:43:16.033Z] Error: EISDIR: illegal operation on a directory, open '/Users/luisenriquez/Personal/gatoTest'
    at Object.openSync (fs.js:458:3)
    at Object.fs.openSync (pkg/prelude/bootstrap.js:487:32)
    at Object.writeFileSync (fs.js:1355:35)
    at Config.writeProjectFile (/Users/luisenriquez/.cache/firebase/tools/lib/node_modules/firebase-tools/lib/config.js:156:8)
    at /Users/luisenriquez/.cache/firebase/tools/lib/node_modules/firebase-tools/lib/init/features/firestore/rules.js:50:27
    at processTicksAndRejections (internal/process/task_queues.js:97:5)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2020-10-19T01:43:19.691Z] ----------------------------------------------------------------------
[debug] [2020-10-19T01:43:19.693Z] Command:       /usr/local/bin/firebase /Users/luisenriquez/.cache/firebase/tools/lib/node_modules/firebase-tools/lib/bin/firebase init
[debug] [2020-10-19T01:43:19.693Z] CLI Version:   8.12.1
[debug] [2020-10-19T01:43:19.693Z] Platform:      darwin
[debug] [2020-10-19T01:43:19.693Z] Node Version:  v12.18.1
[debug] [2020-10-19T01:43:19.694Z] Time:          Sun Oct 18 2020 20:43:19 GMT-0500 (Colombia Standard Time)
[debug] [2020-10-19T01:43:19.694Z] ----------------------------------------------------------------------
[debug] [2020-10-19T01:43:19.695Z] 
[debug] [2020-10-19T01:43:19.698Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2020-10-19T01:43:19.698Z] > authorizing via signed-in user
[info] 
     ######## #### ########  ######## ########     ###     ######  ########
     ##        ##  ##     ## ##       ##     ##  ##   ##  ##       ##
     ######    ##  ########  ######   ########  #########  ######  ######
     ##        ##  ##    ##  ##       ##     ## ##     ##       ## ##
     ##       #### ##     ## ######## ########  ##     ##  ######  ########

You're about to initialize a Firebase project in this directory:

  /Users/luisenriquez/Personal/gatoTest

[info] 
=== Project Setup
[info] 
[info] First, let's associate this project directory with a Firebase project.
[info] You can create multiple project aliases by running firebase use --add, 
[info] but for now we'll just set up a default project.
[info] 
[debug] [2020-10-19T01:43:25.244Z] >>> HTTP REQUEST GET https://firebase.googleapis.com/v1beta1/projects?pageSize=100  
 
[debug] [2020-10-19T01:43:25.704Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 19 Oct 2020 01:43:25 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-27=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] i  Using project testgato (testgato) 
[info] 
=== Database Setup
[info] 
[info] Firebase Realtime Database Rules allow you to define how your data should be
[info] structured and when your data can be read from and written to.
[info] 
[debug] [2020-10-19T01:43:36.831Z] >>> HTTP REQUEST GET https://testgato.firebaseio.com/.settings/rules.json  
 
[debug] [2020-10-19T01:43:37.369Z] <<< HTTP RESPONSE 200 {"server":"nginx","date":"Mon, 19 Oct 2020 01:43:37 GMT","content-type":"application/json; charset=utf-8","content-length":"161","connection":"keep-alive","access-control-allow-origin":"*","cache-control":"no-cache","strict-transport-security":"max-age=31556926; includeSubDomains; preload"}
[info] âœ”  Database Rules for testgato have been downloaded to database.rules.json. 
[info] Future modifications to database.rules.json will update Database Rules when you run
[info] firebase deploy.
[info] 
=== Firestore Setup
[debug] [2020-10-19T01:43:37.373Z] >>> HTTP REQUEST GET https://serviceusage.googleapis.com/v1/projects/testgato/services/firestore.googleapis.com  
 
[debug] [2020-10-19T01:43:38.293Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 19 Oct 2020 01:43:38 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-27=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2020-10-19T01:43:38.294Z] >>> HTTP REQUEST GET https://appengine.googleapis.com/v1/apps/testgato  
 
[debug] [2020-10-19T01:43:39.048Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 19 Oct 2020 01:43:38 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-27=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2020-10-19T01:43:39.048Z] database_type: CLOUD_FIRESTORE
[debug] [2020-10-19T01:43:39.049Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2020-10-19T01:43:39.049Z] > authorizing via signed-in user
[debug] [2020-10-19T01:43:39.050Z] [iam] checking project testgato for permissions ["firebase.projects.get"]
[debug] [2020-10-19T01:43:39.050Z] >>> HTTP REQUEST POST https://cloudresourcemanager.googleapis.com/v1/projects/testgato:testIamPermissions  
 {"permissions":["firebase.projects.get"]}
[debug] [2020-10-19T01:43:39.660Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 19 Oct 2020 01:43:39 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","server-timing":"gfet4t7; dur=368","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-27=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] 
[info] Firestore Security Rules allow you to define how and when to allow
[info] requests. You can keep these rules in your project directory
[info] and publish them with firebase deploy.
[info] 
[debug] [2020-10-19T01:43:41.889Z] >>> HTTP REQUEST GET https://firebaserules.googleapis.com/v1/projects/testgato/releases?pageSize=10&pageToken=  
 
[debug] [2020-10-19T01:43:42.528Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 19 Oct 2020 01:43:42 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-27=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2020-10-19T01:43:42.529Z] Found ruleset: projects/testgato/rulesets/99d80ccf-e27f-4181-83d1-dc6be58444a3
[debug] [2020-10-19T01:43:42.529Z] >>> HTTP REQUEST GET https://firebaserules.googleapis.com/v1/projects/testgato/rulesets/99d80ccf-e27f-4181-83d1-dc6be58444a3  
 
[debug] [2020-10-19T01:43:42.937Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 19 Oct 2020 01:43:42 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-27=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] 
[info] Firestore indexes allow you to perform complex queries while
[info] maintaining performance that scales with the size of the result
[info] set. You can keep index definitions in your project directory
[info] and publish them with firebase deploy.
[info] 
[debug] [2020-10-19T01:43:44.710Z] >>> HTTP REQUEST GET https://firestore.googleapis.com/v1/projects/testgato/databases/(default)/collectionGroups/-/indexes  
 
[debug] [2020-10-19T01:43:44.710Z] >>> HTTP REQUEST GET https://firestore.googleapis.com/v1/projects/testgato/databases/(default)/collectionGroups/-/fields?filter=indexConfig.usesAncestorConfig=false  
 
[debug] [2020-10-19T01:43:45.602Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 19 Oct 2020 01:43:45 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-27=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2020-10-19T01:43:45.743Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 19 Oct 2020 01:43:45 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-27=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] 
=== Functions Setup
[info] 
[info] A functions directory will be created in your project with a Node.js
[info] package pre-configured. Functions can be deployed with firebase deploy.
[info] 
[debug] [2020-10-19T01:43:45.746Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2020-10-19T01:43:45.746Z] > authorizing via signed-in user
[debug] [2020-10-19T01:43:45.747Z] [iam] checking project testgato for permissions ["firebase.projects.get"]
[debug] [2020-10-19T01:43:45.747Z] >>> HTTP REQUEST POST https://cloudresourcemanager.googleapis.com/v1/projects/testgato:testIamPermissions  
 {"permissions":["firebase.projects.get"]}
[debug] [2020-10-19T01:43:46.420Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 19 Oct 2020 01:43:46 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","server-timing":"gfet4t7; dur=387","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-27=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2020-10-19T01:43:46.422Z] >>> HTTP REQUEST POST https://serviceusage.googleapis.com/v1/projects/testgato/services/cloudfunctions.googleapis.com:enable  
 
[debug] [2020-10-19T01:43:46.422Z] >>> HTTP REQUEST POST https://serviceusage.googleapis.com/v1/projects/testgato/services/runtimeconfig.googleapis.com:enable  
 
[debug] [2020-10-19T01:43:47.239Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 19 Oct 2020 01:43:47 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-27=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2020-10-19T01:43:47.241Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 19 Oct 2020 01:43:47 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-27=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] âœ”  Wrote functions/package.json 
[info] âœ”  Wrote functions/.eslintrc.js 
[info] âœ”  Wrote functions/tsconfig.json 
[info] âœ”  Wrote functions/src/index.ts 
[info] âœ”  Wrote functions/.gitignore 
[info] 
=== Hosting Setup
[info] 
[info] Your public directory is the folder (relative to your project directory) that
[info] will contain Hosting assets to be uploaded with firebase deploy. If you
[info] have a build process for your assets, use your build's output directory.
[info] 
[debug] [2020-10-19T01:44:45.568Z] >>> HTTP REQUEST GET https://www.gstatic.com/firebasejs/releases.json  
 
[debug] [2020-10-19T01:44:48.845Z] <<< HTTP RESPONSE 200 {"accept-ranges":"bytes","vary":"Accept-Encoding, Origin","content-type":"application/json","content-length":"1429","date":"Mon, 19 Oct 2020 01:29:54 GMT","expires":"Mon, 19 Oct 2020 02:19:54 GMT","last-modified":"Thu, 15 Oct 2020 21:32:42 GMT","x-content-type-options":"nosniff","server":"sffe","x-xss-protection":"0","cache-control":"public, max-age=3000","age":"894","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-27=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""}
[info] âœ”  Wrote public/index.html 
[info] 
[info] i  Detected a .git folder at /Users/luisenriquez/Personal/gatoTest 
[info] i  Authorizing with GitHub to upload your service account to a GitHub repository's secrets store. 
[info] 
[info] Visit this URL on this device to log in:
[info] https://github.com/login/oauth/authorize?client_id=89cf50f02ac6aaed3484&state=948904261&redirect_uri=http%3A%2F%2Flocalhost%3A9005&scope=read%3Auser%20repo%20public_repo
[info] 
[info] Waiting for authentication...
[debug] [2020-10-19T01:45:10.183Z] >>> HTTP REQUEST POST https://github.com/login/oauth/access_token  
 {"client_id":"89cf50f02ac6aaed3484","client_secret":"3330d14abc895d9a74d5f17cd7a00711fa2c5bf0","code":"4e5e10e4bbc64a0228a6","redirect_uri":"http://localhost:9005","state":"948904261"}
[debug] [2020-10-19T01:45:10.569Z] <<< HTTP RESPONSE 200 {"server":"GitHub.com","date":"Mon, 19 Oct 2020 01:45:10 GMT","content-type":"application/json; charset=utf-8","transfer-encoding":"chunked","status":"200 OK","vary":"X-PJAX, Accept-Encoding, Accept, X-Requested-With","etag":"W/\"034447abdfd66e12674a9e2e60b851cd\"","cache-control":"max-age=0, private, must-revalidate","strict-transport-security":"max-age=31536000; includeSubdomains; preload","x-frame-options":"deny","x-content-type-options":"nosniff","x-xss-protection":"1; mode=block","referrer-policy":"origin-when-cross-origin, strict-origin-when-cross-origin","expect-ct":"max-age=2592000, report-uri=\"https://api.github.com/_private/browser/errors\"","content-security-policy":"default-src 'none'; base-uri 'self'; block-all-mixed-content; connect-src 'self' uploads.github.com www.githubstatus.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com github-production-repository-file-5c1aeb.s3.amazonaws.com github-production-upload-manifest-file-7fdce7.s3.amazonaws.com github-production-user-asset-6210df.s3.amazonaws.com cdn.optimizely.com logx.optimizely.com/v1/events wss://alive.github.com; font-src github.githubassets.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; frame-src render.githubusercontent.com; img-src 'self' data: github.githubassets.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; manifest-src 'self'; media-src 'none'; script-src github.githubassets.com; style-src 'unsafe-inline' github.githubassets.com; worker-src github.com/socket-worker.js gist.github.com/socket-worker.js","x-github-request-id":"CD5B:30C4:2170434:3206A31:5F8CEFA6"}
[debug] [2020-10-19T01:45:10.570Z] >>> HTTP REQUEST GET https://api.github.com/user  
 
[debug] [2020-10-19T01:45:11.041Z] <<< HTTP RESPONSE 200 {"server":"GitHub.com","date":"Mon, 19 Oct 2020 01:45:10 GMT","content-type":"application/json; charset=utf-8","content-length":"1405","status":"200 OK","cache-control":"private, max-age=60, s-maxage=60","vary":"Accept, Authorization, Cookie, X-GitHub-OTP, Accept-Encoding, Accept, X-Requested-With","etag":"\"0eab7b4c86cfa066fa98f5b8f64f1fa28df24feef85ce62a0ad41a73d0e49c38\"","last-modified":"Mon, 19 Oct 2020 01:45:09 GMT","x-oauth-scopes":"read:user, repo","x-accepted-oauth-scopes":"","x-oauth-client-id":"89cf50f02ac6aaed3484","x-github-media-type":"github.v3","x-ratelimit-limit":"5000","x-ratelimit-remaining":"4999","x-ratelimit-reset":"1603075510","x-ratelimit-used":"1","access-control-expose-headers":"ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset","access-control-allow-origin":"*","strict-transport-security":"max-age=31536000; includeSubdomains; preload","x-frame-options":"deny","x-content-type-options":"nosniff","x-xss-protection":"1; mode=block","referrer-policy":"origin-when-cross-origin, strict-origin-when-cross-origin","content-security-policy":"default-src 'none'","x-github-request-id":"CD61:3466:9B1E42:1829C46:5F8CEFA6"}
[info] 
[info] âœ”  Success! Logged into GitHub as lenriquez 
[info] 
[debug] [2020-10-19T01:45:24.289Z] >>> HTTP REQUEST GET https://api.github.com/repos/testgato/actions/secrets/public-key?type=owner  
 
[debug] [2020-10-19T01:45:24.617Z] <<< HTTP RESPONSE 404 {"server":"GitHub.com","date":"Mon, 19 Oct 2020 01:45:24 GMT","content-type":"application/json; charset=utf-8","content-length":"74","status":"404 Not Found","x-oauth-scopes":"read:user, repo","x-accepted-oauth-scopes":"repo","x-oauth-client-id":"89cf50f02ac6aaed3484","x-github-media-type":"github.v3","x-ratelimit-limit":"5000","x-ratelimit-remaining":"4998","x-ratelimit-reset":"1603075510","x-ratelimit-used":"2","access-control-expose-headers":"ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset","access-control-allow-origin":"*","strict-transport-security":"max-age=31536000; includeSubdomains; preload","x-frame-options":"deny","x-content-type-options":"nosniff","x-xss-protection":"1; mode=block","referrer-policy":"origin-when-cross-origin, strict-origin-when-cross-origin","content-security-policy":"default-src 'none'","vary":"Accept-Encoding, Accept, X-Requested-With","x-github-request-id":"CD97:1AF7:7D9418:159296A:5F8CEFB4"}
[debug] [2020-10-19T01:45:24.617Z] <<< HTTP RESPONSE BODY Not Found {"message":"Not Found","documentation_url":"https://docs.github.com/rest"}
[debug] [2020-10-19T01:45:29.001Z] >>> HTTP REQUEST GET https://api.github.com/repos//actions/secrets/public-key?type=owner  
 
[debug] [2020-10-19T01:45:29.312Z] <<< HTTP RESPONSE 404 {"server":"GitHub.com","date":"Mon, 19 Oct 2020 01:45:29 GMT","content-type":"application/json; charset=utf-8","content-length":"74","status":"404 Not Found","x-oauth-scopes":"read:user, repo","x-accepted-oauth-scopes":"repo","x-oauth-client-id":"89cf50f02ac6aaed3484","x-github-media-type":"github.v3","x-ratelimit-limit":"5000","x-ratelimit-remaining":"4997","x-ratelimit-reset":"1603075510","x-ratelimit-used":"3","access-control-expose-headers":"ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset","access-control-allow-origin":"*","strict-transport-security":"max-age=31536000; includeSubdomains; preload","x-frame-options":"deny","x-content-type-options":"nosniff","x-xss-protection":"1; mode=block","referrer-policy":"origin-when-cross-origin, strict-origin-when-cross-origin","content-security-policy":"default-src 'none'","vary":"Accept-Encoding, Accept, X-Requested-With","x-github-request-id":"CDAC:1B5B:116AF02:255F3E6:5F8CEFB9"}
[debug] [2020-10-19T01:45:29.313Z] <<< HTTP RESPONSE BODY Not Found {"message":"Not Found","documentation_url":"https://docs.github.com/rest"}
